{"version":3,"file":"static/js/877.be068486.chunk.js","mappings":"+RACMA,EAAU,mCAChBC,IAAAA,SAAAA,QAAA,+BACO,IAAMC,EAAiB,WAC5B,OAAOD,IAAAA,IAAU,oBAAqB,CACpCE,OAAQ,CACNC,QAASJ,MAKFK,EAAoB,SAAAC,GAC/B,OAAOL,IAAAA,IAAU,gBAAiB,CAChCE,OAAQ,CACNC,QAASJ,EACTO,MAAOD,MAKAE,EAAe,SAAAC,GAC1B,OAAOR,IAAAA,IAAA,iBAAoBQ,GAAW,CACpCN,OAAQ,CACNC,QAASJ,MAKFU,EAAe,SAAAD,GAC1B,OAAOR,IAAAA,IAAA,iBAAoBQ,EAApB,YAAuC,CAC5CN,OAAQ,CACNC,QAASJ,MAKFW,EAAe,SAAAF,GAC1B,OAAOR,IAAAA,IAAA,iBAAoBQ,EAApB,YAAuC,CAC5CN,OAAQ,CACNC,QAASJ,O,sHCnCFY,EAAO,WACjB,OAA8BC,EAAAA,EAAAA,YAA9B,eAAOC,EAAP,KAAgBC,EAAhB,KACQN,GAAWO,EAAAA,EAAAA,MAAXP,QAMP,OALMQ,EAAAA,EAAAA,YAAU,YAEhBP,EAAAA,EAAAA,IAAaD,GAASS,MAAK,gBAAEC,EAAF,EAAEA,KAAF,OAAYJ,EAAWI,QAClD,CAACV,KAEO,8BAAIK,IAAW,wBACpBA,EAAQM,MAAQN,EAAQM,KAAKC,OAAS,EACrCP,EAAQM,KAAKE,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,aAAcC,EAArB,EAAqBA,KAAMC,EAA3B,EAA2BA,UAA3B,OACf,2BACE,gBACEC,IACEH,EAAY,yCAC0BA,GAD1B,qEAIdI,IAAKH,KAGP,uBAAIA,KACJ,uBAAIC,MAXGH,OAeX","sources":["Service/Service.js","components/Cast/Cast.jsx"],"sourcesContent":["import axios from 'axios';\nconst API_KEY = 'ce11188e46260bdc0ed3140d02ef06fd';\naxios.defaults.baseURL = `https://api.themoviedb.org/3`;\nexport const fetchTrendings = () => {\n  return axios.get('/trending/all/day', {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n};\n\nexport const fetchSearchMovies = search => {\n  return axios.get('/search/movie', {\n    params: {\n      api_key: API_KEY,\n      query: search,\n    },\n  });\n};\n\nexport const fetchDetails = movieId => {\n  return axios.get(`/movie/${movieId}`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n};\n\nexport const fetchCredits = movieId => {\n  return axios.get(`/movie/${movieId}/credits`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n};\n\nexport const fetchReviews = movieId => {\n  return axios.get(`/movie/${movieId}/reviews`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n};\n","import { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { fetchCredits } from \"Service/Service\";\n\nexport const Cast = () => {\n   const [credits, setCredits] = useState()\n    const {movieId} = useParams();\n          useEffect(() =>{\n\n    fetchCredits(movieId).then(({data}) => setCredits(data))\n  },[movieId])\n\n    return (<>{ credits && <ul>\n      {credits.cast && credits.cast.length > 0 ? (\n        credits.cast.map(({ id, profile_path, name, character }) => (\n          <li key={id}>\n            <img\n              src={\n                profile_path\n                  ? `https://image.tmdb.org/t/p/w300${profile_path}`\n                  : `https://i.gifer.com/origin/3f/3fcf565ccc553afcfd89858c97304705.gif`\n              }\n              alt={name}\n              \n            />\n            <p>{name}</p>\n            <p>{character}</p>\n          </li>\n        ))\n      ) : (\n        <b>Nothing was found!</b>\n      )}\n    </ul> }</>)\n\n} "],"names":["API_KEY","axios","fetchTrendings","params","api_key","fetchSearchMovies","search","query","fetchDetails","movieId","fetchCredits","fetchReviews","Cast","useState","credits","setCredits","useParams","useEffect","then","data","cast","length","map","id","profile_path","name","character","src","alt"],"sourceRoot":""}