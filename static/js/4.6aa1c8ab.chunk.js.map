{"version":3,"file":"static/js/4.6aa1c8ab.chunk.js","mappings":"6RACMA,EAAU,mCAChBC,IAAAA,SAAAA,QAAA,+BACO,IAAMC,EAAiB,WAC5B,OAAOD,IAAAA,IAAU,oBAAqB,CACpCE,OAAQ,CACNC,QAASJ,MAKFK,EAAoB,SAAAC,GAC/B,OAAOL,IAAAA,IAAU,gBAAiB,CAChCE,OAAQ,CACNC,QAASJ,EACTO,MAAOD,MAKAE,EAAe,SAAAC,GAC1B,OAAOR,IAAAA,IAAA,iBAAoBQ,GAAW,CACpCN,OAAQ,CACNC,QAASJ,MAKFU,EAAe,SAAAD,GAC1B,OAAOR,IAAAA,IAAA,iBAAoBQ,EAApB,YAAuC,CAC5CN,OAAQ,CACNC,QAASJ,MAKFW,EAAe,SAAAF,GAC1B,OAAOR,IAAAA,IAAA,iBAAoBQ,EAApB,YAAuC,CAC5CN,OAAQ,CACNC,QAASJ,O,qFCpCFY,EAAQ,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,GAAIC,EAAkB,EAAlBA,MAAOC,EAAW,EAAXA,KAC3BC,GAAWC,EAAAA,EAAAA,MAEjB,OADAC,QAAQC,IAAIH,IAEV,yBACE,SAAC,KAAD,CAASI,MAAO,CAAEC,KAAML,GAAYM,GAAE,kBAAaT,GAAnD,SACGC,GAAgBC,Q,kGCPZQ,EAAY,SAAC,GAAgB,IAAfC,EAAc,EAAdA,SAC3B,GAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAOnB,EAAP,KAAeoB,EAAf,KAWI,OAAO,+BACH,kBAAMF,SAVW,SAACG,GAClBA,EAAMC,iBACNJ,EAASlB,IAQT,WACA,4BACI,kBAAOuB,MAAOvB,EAAQwB,SAPV,SAACH,GACjBD,EAAUC,EAAMI,OAAOF,QAM0BG,KAAK,YAEtD,6C,2DCjBKC,EAAa,WACxB,OACE,qDAEE,SAAC,KAAD,CAAMX,GAAG,IAAT,6BCIOY,EAAc,WAAO,IAAD,EAC/B,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACA,GAAoCZ,EAAAA,EAAAA,UAAS,MAA7C,eAAOa,EAAP,KAAmBC,EAAnB,KACMC,EAAa,UAAGJ,EAAaK,IAAI,YAApB,QAA4B,IAE/CC,EAAAA,EAAAA,YAAU,WACHF,IAGLnC,EAAAA,EAAAA,IAAkBmC,GAAeG,MAAK,gBAAGC,EAAH,EAAGA,KAAH,OACpCL,GAAcM,EAAAA,EAAAA,GAAOD,SAEtB,CAACJ,IAUJ,OACE,iCACE,SAACjB,EAAD,CAAWC,SAVM,SAAClB,GACfA,EAIL+B,EAAgB,CAAES,EAAGxC,IAHnByC,EAAAA,GAAAA,MAAY,sBASXT,IACC,8BACyB,IAAtBA,EAAWU,QACV,+BACE,SAACf,EAAD,OAGF,wBACGK,EAAWW,KAAI,YAA0B,IAAvBpC,EAAsB,EAAtBA,GAAIC,EAAkB,EAAlBA,MAAOC,EAAW,EAAXA,KAC5B,OACE,SAACH,EAAA,EAAD,CAEEC,GAAIA,EACJC,MAAOA,EACPC,KAAMA,IAHDmC,EAAAA,EAAAA,mB,qDC9ClB,IAAML,EAAS,SAAAD,GACpB,OAAOA,EAAKO,QAAQF,KAClB,kBAA6D,CAC3DpC,GADF,EAAGA,GAEDC,MAFF,EAAOA,MAGLsC,SAHF,EAAcA,SAIZC,UAJF,EAAwBA,UAKtBC,aALF,EAAmCA,aAMjCvC,KANF,EAAiDA,W,sDCD9C,IAkBImC,EAAS,eAACK,EAAD,uDAAQ,GAAR,OAClBC,OAAOC,gBAAgB,IAAIC,WAAWH,IAAOI,QAAO,SAAC9C,EAAI+C,GAWvD,OARE/C,IAFF+C,GAAQ,IACG,GACHA,EAAKC,SAAS,IACXD,EAAO,IACTA,EAAO,IAAIC,SAAS,IAAIC,cACtBF,EAAO,GACV,IAEA,MAGP","sources":["Service/Service.js","components/Links/Links.jsx","components/SearchBar/SearchBar.jsx","components/GoHomePage/GoHomePage.jsx","components/Pages/MovieSearch/MovieSearch.jsx","components/utils/Mapper.js","../node_modules/nanoid/index.browser.js"],"sourcesContent":["import axios from 'axios';\nconst API_KEY = 'ce11188e46260bdc0ed3140d02ef06fd';\naxios.defaults.baseURL = `https://api.themoviedb.org/3`;\nexport const fetchTrendings = () => {\n  return axios.get('/trending/all/day', {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n};\n\nexport const fetchSearchMovies = search => {\n  return axios.get('/search/movie', {\n    params: {\n      api_key: API_KEY,\n      query: search,\n    },\n  });\n};\n\nexport const fetchDetails = movieId => {\n  return axios.get(`/movie/${movieId}`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n};\n\nexport const fetchCredits = movieId => {\n  return axios.get(`/movie/${movieId}/credits`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n};\n\nexport const fetchReviews = movieId => {\n  return axios.get(`/movie/${movieId}/reviews`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n};\n","import { NavLink } from \"react-router-dom\";\nimport { useLocation } from \"react-router-dom\";\n\nexport const Links = ({ id, title, name }) => {\n  const location = useLocation();\n  console.log(location);\n  return (\n    <li>\n      <NavLink state={{ from: location }} to={`/movies/${id}`}>\n        {title ? title : name}\n      </NavLink>\n    </li>\n  );\n};\n","import { useState } from \"react\"\n\nexport const SearchBar = ({onSubmit}) => {\nconst [search, setSearch] = useState(\"\")\n\n    const handleSubmit = (event) =>{\n        event.preventDefault()\n        onSubmit(search)\n    }\n\n    const handleInput = (event) =>{\n        setSearch(event.target.value)\n    }\n\n    return <>\n        <form onSubmit={handleSubmit}>\n        <label>\n            <input value={search} onChange={handleInput} type=\"text\" />\n        </label>\n        <button >submit</button>\n        </form>\n        </>\n}\n","import { Link } from \"react-router-dom\";\n\nexport const GoHomePage = () => {\n  return (\n    <h1>\n      We cant find youre page\n      <Link to=\"/\">go home pls</Link>\n    </h1>\n  );\n};\n","import { useEffect, useState } from \"react\";\nimport { SearchBar } from \"components/SearchBar/SearchBar\";\nimport { useSearchParams } from \"react-router-dom\";\nimport { fetchSearchMovies } from \"Service/Service\";\nimport { mapper } from \"components/utils/Mapper\";\nimport { Links } from \"components/Links/Links\";\nimport { nanoid } from \"nanoid\";\nimport { toast } from \"react-toastify\";\nimport { GoHomePage } from \"components/GoHomePage/GoHomePage\";\n\nexport const MovieSearch = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [searchData, setSearchData] = useState(null);\n  const searchRequest = searchParams.get(\"q\") ?? \"\";\n\n  useEffect(() => {\n    if (!searchRequest) {\n      return;\n    }\n    fetchSearchMovies(searchRequest).then(({ data }) =>\n      setSearchData(mapper(data))\n    );\n  }, [searchRequest]);\n\n  const handleSubmit = (search) => {\n    if (!search) {\n      toast.error(\"Input some Text\");\n      return;\n    }\n    setSearchParams({ q: search });\n  };\n\n  return (\n    <>\n      <SearchBar onSubmit={handleSubmit}></SearchBar>\n      {searchData && (\n        <>\n          {searchData.length === 0 ? (\n            <>\n              <GoHomePage />\n            </>\n          ) : (\n            <ul>\n              {searchData.map(({ id, title, name }) => {\n                return (\n                  <Links\n                    key={nanoid()}\n                    id={id}\n                    title={title}\n                    name={name}\n                  ></Links>\n                );\n              })}\n            </ul>\n          )}\n        </>\n      )}\n    </>\n  );\n};\n","export const mapper = data => {\n  return data.results.map(\n    ({ id, title, overwiev, genre_ids, vote_average, name }) => ({\n      id,\n      title,\n      overwiev,\n      genre_ids,\n      vote_average,\n      name,\n    })\n  );\n};\n","export { urlAlphabet } from './url-alphabet/index.js'\nexport let random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nexport let customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nexport let customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nexport let nanoid = (size = 21) =>\n  crypto.getRandomValues(new Uint8Array(size)).reduce((id, byte) => {\n    byte &= 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte > 62) {\n      id += '-'\n    } else {\n      id += '_'\n    }\n    return id\n  }, '')\n"],"names":["API_KEY","axios","fetchTrendings","params","api_key","fetchSearchMovies","search","query","fetchDetails","movieId","fetchCredits","fetchReviews","Links","id","title","name","location","useLocation","console","log","state","from","to","SearchBar","onSubmit","useState","setSearch","event","preventDefault","value","onChange","target","type","GoHomePage","MovieSearch","useSearchParams","searchParams","setSearchParams","searchData","setSearchData","searchRequest","get","useEffect","then","data","mapper","q","toast","length","map","nanoid","results","overwiev","genre_ids","vote_average","size","crypto","getRandomValues","Uint8Array","reduce","byte","toString","toUpperCase"],"sourceRoot":""}